<?php
/*
 * This file has been automatically generated by TDBM.
 * You can edit this file as it will not be overwritten.
 */

declare(strict_types=1);

namespace App\Domain\Dao;

use App\Domain\Dao\Generated\BaseItemDao;
use App\Domain\Model\Item;
use App\Domain\Throwable\InvalidModel;
use Symfony\Component\Validator\Validator\ValidatorInterface;
use TheCodingMachine\GraphQLite\Annotations\Factory;
use TheCodingMachine\GraphQLite\Annotations\HideParameter;
use TheCodingMachine\TDBM\ResultIterator;
use TheCodingMachine\TDBM\TDBMService;

/**
 * The ItemDao class will maintain the persistence of Item class into the items table.
 */
class ItemDao extends BaseItemDao
{
    private ValidatorInterface $validator;

    public function __construct(TDBMService $tdbmService, ValidatorInterface $validator)
    {
        $this->validator = $validator;
        parent::__construct($tdbmService);
    }

    /**
     * @Factory
     * @HideParameter(for="$lazyLoading")
     */
    public function getById(int $id, bool $lazyLoading = false): Item
    {
        return parent::getById($id, $lazyLoading);
    }

    /**
     * @throws InvalidModel
     */
    public function validate(Item $item): void
    {
        $violations = $this->validator->validate($item);
        InvalidModel::throwException($violations);
    }

    /**
     * @return Item[]|ResultIterator
     */
    public function search(
        ?string $search = null
    ): ResultIterator {
        return $this->find(
            ['label LIKE :search'],
            [
                'search' => '%' . $search . '%',
            ]
        );
    }
}
